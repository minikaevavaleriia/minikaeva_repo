"""
Создайте функцию которая принимает на вход 3 именованных параметра, выведите на печать значения этих параметров,
но только в том случае если они не равны None.
"""


def task1(parameter1='ok', parameter2=1, parameter3=[1]):
    if parameter1 and parameter2 and parameter3:
        print(parameter1, parameter2, parameter3)


task1('lol', 12, ['kek', 0])
task1('', 0, [])


"""
Представьте, что сумма за пользование услугами такси складывается из
базового тарифа в размере $4,00 плюс $0,25 за каждые 140 м поездки.
Напишите функцию, принимающую в качестве единственного параметра
расстояние поездки в километрах и возвращающую итоговую сумму опла-
ты такси.
"""


def task2(distance_km):
    return 4 + (distance_km / 0.14) * 0.25


print(task2(1.4))


"""
Напишите программу, которая будет складывать числа, введенные поль-
зователем. Сигналом к окончанию ввода должна служить пустая строка.
Отобразите на экране сумму значений (или 0.0, если пользователь сразу
же пропустил ввод). Решите эту задачу с использованием рекурсии. В ва-
шей программе не должны присутствовать циклы.
Подсказка. В теле вашей рекурсивной функции должен производиться запрос одно-
го числа у пользователя, после чего должно быть принято решение о том, произво-
дить ли еще один рекурсивный вызов. Ваша функция не должна принимать аргумен-
тов, а возвращать будет числовое значе
"""


list1 = []


def task_3(list_):  # у меня не получилось без аргументов :(((

    user = input('Enter number: ')
    if user != '':
        list_.append(int(user))
        task_3(list_)
    else:
        if user == '' and list_ == ['']:
            print(0.0)
        else:
            print(sum(list_))


task_3(list1)


"""
Напишите функцию cacluate, которая может принимать любое количество чисел и возвращать кортеж.
Первое значение кортежа - это среднее значение всех параметров, а второе значение - все числа, превышающие среднее значение.
Второе значение оформите в виде списка.
"""


def calculate(*args):
    list_of_all = []
    new_list = []
    for arg in args:
        list_of_all.append(arg)
    number = sum(list_of_all) / len(list_of_all)
    for el in list_of_all:
        if el > number:
            new_list.append(el)
    tuple_ = (number, new_list)
    return tuple_


print(calculate(56, 3, 3, 3, 3, 18, 2, 2, 2, 8, 10, 12, 1))
#2, 3, 5, 0, 7, 1, 4, 4, 10


"""
Очень часто веб-дизайнеры используют HEX-значение какого-либо цвета.
Напишите программу принимающую 2 позиционных аргумента: слово "Цвета" и количество цветов.
и произвольное количество значений Цвет : HEX. Программа должна вывести все данные на экран.
"""


def task_5(colour, number, **kwargs):
    print(f'{colour}: {number}')
    for kw in kwargs:
        print(f'{kw}: {kwargs[kw]}')


task_5(input(), int(input()), white=100, black=404, yellow=200, green=303)








